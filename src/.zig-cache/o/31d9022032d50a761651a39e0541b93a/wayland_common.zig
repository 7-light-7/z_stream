// Generated by zig-wayland

// Copyright © 2008-2011 Kristian Høgsberg
// Copyright © 2010-2011 Intel Corporation
// Copyright © 2012-2013 Collabora, Ltd.
// 
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation files
// (the "Software"), to deal in the Software without restriction,
// including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software,
// and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
// 
// The above copyright notice and this permission notice (including the
// next paragraph) shall be included in all copies or substantial
// portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
// BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 

const common = @import("common.zig");pub const display = struct {pub const interface: common.Interface = .{
    .name = "wl_display",
    .version = 1,
    .method_count = 2,.methods = &.{.{ .name = "sync", .signature = "n",.types = &.{blk: {
    _ = common.wl.callback;
    break :blk @extern(*const common.Interface, .{ .name = "wl_callback_interface" });
},},},.{ .name = "get_registry", .signature = "n",.types = &.{blk: {
    _ = common.wl.registry;
    break :blk @extern(*const common.Interface, .{ .name = "wl_registry_interface" });
},},},},.event_count = 2,.events = &.{.{ .name = "error", .signature = "ous",.types = &.{null,null,null,},},.{ .name = "delete_id", .signature = "u",.types = &.{null,},},},};comptime {
    @export(interface, .{
        .name = "wl_display_interface",
        .visibility = .hidden,
    });
}pub const Error = enum(c_int) {invalid_object= 0,invalid_method= 1,no_memory= 2,implementation= 3,_,};
};pub const registry = struct {pub const interface: common.Interface = .{
    .name = "wl_registry",
    .version = 1,
    .method_count = 1,.methods = &.{.{ .name = "bind", .signature = "usun",.types = &.{null,null,},},},.event_count = 2,.events = &.{.{ .name = "global", .signature = "usu",.types = &.{null,null,null,},},.{ .name = "global_remove", .signature = "u",.types = &.{null,},},},};comptime {
    @export(interface, .{
        .name = "wl_registry_interface",
        .visibility = .hidden,
    });
}};pub const callback = struct {pub const interface: common.Interface = .{
    .name = "wl_callback",
    .version = 1,
    .method_count = 0,.methods = null,.event_count = 1,.events = &.{.{ .name = "done", .signature = "u",.types = &.{null,},},},};comptime {
    @export(interface, .{
        .name = "wl_callback_interface",
        .visibility = .hidden,
    });
}};pub const buffer = struct {pub const interface: common.Interface = .{
    .name = "wl_buffer",
    .version = 1,
    .method_count = 1,.methods = &.{.{ .name = "destroy", .signature = "",.types = null,},},.event_count = 1,.events = &.{.{ .name = "release", .signature = "",.types = null,},},};comptime {
    @export(interface, .{
        .name = "wl_buffer_interface",
        .visibility = .hidden,
    });
}};pub const compositor = struct {pub const interface: common.Interface = .{
    .name = "wl_compositor",
    .version = 6,
    .method_count = 2,.methods = &.{.{ .name = "create_surface", .signature = "n",.types = &.{blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},},},.{ .name = "create_region", .signature = "n",.types = &.{blk: {
    _ = common.wl.region;
    break :blk @extern(*const common.Interface, .{ .name = "wl_region_interface" });
},},},},.event_count = 0,.events = null,};comptime {
    @export(interface, .{
        .name = "wl_compositor_interface",
        .visibility = .hidden,
    });
}};pub const surface = struct {pub const interface: common.Interface = .{
    .name = "wl_surface",
    .version = 6,
    .method_count = 11,.methods = &.{.{ .name = "destroy", .signature = "",.types = null,},.{ .name = "attach", .signature = "?oii",.types = &.{blk: {
    _ = common.wl.buffer;
    break :blk @extern(*const common.Interface, .{ .name = "wl_buffer_interface" });
},null,null,},},.{ .name = "damage", .signature = "iiii",.types = &.{null,null,null,null,},},.{ .name = "frame", .signature = "n",.types = &.{blk: {
    _ = common.wl.callback;
    break :blk @extern(*const common.Interface, .{ .name = "wl_callback_interface" });
},},},.{ .name = "set_opaque_region", .signature = "?o",.types = &.{blk: {
    _ = common.wl.region;
    break :blk @extern(*const common.Interface, .{ .name = "wl_region_interface" });
},},},.{ .name = "set_input_region", .signature = "?o",.types = &.{blk: {
    _ = common.wl.region;
    break :blk @extern(*const common.Interface, .{ .name = "wl_region_interface" });
},},},.{ .name = "commit", .signature = "",.types = null,},.{ .name = "set_buffer_transform", .signature = "2i",.types = &.{null,},},.{ .name = "set_buffer_scale", .signature = "3i",.types = &.{null,},},.{ .name = "damage_buffer", .signature = "4iiii",.types = &.{null,null,null,null,},},.{ .name = "offset", .signature = "5ii",.types = &.{null,null,},},},.event_count = 4,.events = &.{.{ .name = "enter", .signature = "o",.types = &.{blk: {
    _ = common.wl.output;
    break :blk @extern(*const common.Interface, .{ .name = "wl_output_interface" });
},},},.{ .name = "leave", .signature = "o",.types = &.{blk: {
    _ = common.wl.output;
    break :blk @extern(*const common.Interface, .{ .name = "wl_output_interface" });
},},},.{ .name = "preferred_buffer_scale", .signature = "6i",.types = &.{null,},},.{ .name = "preferred_buffer_transform", .signature = "6u",.types = &.{null,},},},};comptime {
    @export(interface, .{
        .name = "wl_surface_interface",
        .visibility = .hidden,
    });
}pub const Error = enum(c_int) {invalid_scale= 0,invalid_transform= 1,invalid_size= 2,invalid_offset= 3,defunct_role_object= 4,_,};
};pub const region = struct {pub const interface: common.Interface = .{
    .name = "wl_region",
    .version = 1,
    .method_count = 3,.methods = &.{.{ .name = "destroy", .signature = "",.types = null,},.{ .name = "add", .signature = "iiii",.types = &.{null,null,null,null,},},.{ .name = "subtract", .signature = "iiii",.types = &.{null,null,null,null,},},},.event_count = 0,.events = null,};comptime {
    @export(interface, .{
        .name = "wl_region_interface",
        .visibility = .hidden,
    });
}};pub const shm = struct {pub const interface: common.Interface = .{
    .name = "wl_shm",
    .version = 2,
    .method_count = 2,.methods = &.{.{ .name = "create_pool", .signature = "nhi",.types = &.{blk: {
    _ = common.wl.shm_pool;
    break :blk @extern(*const common.Interface, .{ .name = "wl_shm_pool_interface" });
},null,null,},},.{ .name = "release", .signature = "2",.types = null,},},.event_count = 1,.events = &.{.{ .name = "format", .signature = "u",.types = &.{null,},},},};comptime {
    @export(interface, .{
        .name = "wl_shm_interface",
        .visibility = .hidden,
    });
}pub const Error = enum(c_int) {invalid_format= 0,invalid_stride= 1,invalid_fd= 2,_,};
pub const Format = enum(c_int) {argb8888= 0,xrgb8888= 1,c8= 0x20203843,rgb332= 0x38424752,bgr233= 0x38524742,xrgb4444= 0x32315258,xbgr4444= 0x32314258,rgbx4444= 0x32315852,bgrx4444= 0x32315842,argb4444= 0x32315241,abgr4444= 0x32314241,rgba4444= 0x32314152,bgra4444= 0x32314142,xrgb1555= 0x35315258,xbgr1555= 0x35314258,rgbx5551= 0x35315852,bgrx5551= 0x35315842,argb1555= 0x35315241,abgr1555= 0x35314241,rgba5551= 0x35314152,bgra5551= 0x35314142,rgb565= 0x36314752,bgr565= 0x36314742,rgb888= 0x34324752,bgr888= 0x34324742,xbgr8888= 0x34324258,rgbx8888= 0x34325852,bgrx8888= 0x34325842,abgr8888= 0x34324241,rgba8888= 0x34324152,bgra8888= 0x34324142,xrgb2101010= 0x30335258,xbgr2101010= 0x30334258,rgbx1010102= 0x30335852,bgrx1010102= 0x30335842,argb2101010= 0x30335241,abgr2101010= 0x30334241,rgba1010102= 0x30334152,bgra1010102= 0x30334142,yuyv= 0x56595559,yvyu= 0x55595659,uyvy= 0x59565955,vyuy= 0x59555956,ayuv= 0x56555941,nv12= 0x3231564e,nv21= 0x3132564e,nv16= 0x3631564e,nv61= 0x3136564e,yuv410= 0x39565559,yvu410= 0x39555659,yuv411= 0x31315559,yvu411= 0x31315659,yuv420= 0x32315559,yvu420= 0x32315659,yuv422= 0x36315559,yvu422= 0x36315659,yuv444= 0x34325559,yvu444= 0x34325659,r8= 0x20203852,r16= 0x20363152,rg88= 0x38384752,gr88= 0x38385247,rg1616= 0x32334752,gr1616= 0x32335247,xrgb16161616f= 0x48345258,xbgr16161616f= 0x48344258,argb16161616f= 0x48345241,abgr16161616f= 0x48344241,xyuv8888= 0x56555958,vuy888= 0x34325556,vuy101010= 0x30335556,y210= 0x30313259,y212= 0x32313259,y216= 0x36313259,y410= 0x30313459,y412= 0x32313459,y416= 0x36313459,xvyu2101010= 0x30335658,xvyu12_16161616= 0x36335658,xvyu16161616= 0x38345658,y0l0= 0x304c3059,x0l0= 0x304c3058,y0l2= 0x324c3059,x0l2= 0x324c3058,yuv420_8bit= 0x38305559,yuv420_10bit= 0x30315559,xrgb8888_a8= 0x38415258,xbgr8888_a8= 0x38414258,rgbx8888_a8= 0x38415852,bgrx8888_a8= 0x38415842,rgb888_a8= 0x38413852,bgr888_a8= 0x38413842,rgb565_a8= 0x38413552,bgr565_a8= 0x38413542,nv24= 0x3432564e,nv42= 0x3234564e,p210= 0x30313250,p010= 0x30313050,p012= 0x32313050,p016= 0x36313050,axbxgxrx106106106106= 0x30314241,nv15= 0x3531564e,q410= 0x30313451,q401= 0x31303451,xrgb16161616= 0x38345258,xbgr16161616= 0x38344258,argb16161616= 0x38345241,abgr16161616= 0x38344241,c1= 0x20203143,c2= 0x20203243,c4= 0x20203443,d1= 0x20203144,d2= 0x20203244,d4= 0x20203444,d8= 0x20203844,r1= 0x20203152,r2= 0x20203252,r4= 0x20203452,r10= 0x20303152,r12= 0x20323152,avuy8888= 0x59555641,xvuy8888= 0x59555658,p030= 0x30333050,_,};
};pub const shm_pool = struct {pub const interface: common.Interface = .{
    .name = "wl_shm_pool",
    .version = 2,
    .method_count = 3,.methods = &.{.{ .name = "create_buffer", .signature = "niiiiu",.types = &.{blk: {
    _ = common.wl.buffer;
    break :blk @extern(*const common.Interface, .{ .name = "wl_buffer_interface" });
},null,null,null,null,null,},},.{ .name = "destroy", .signature = "",.types = null,},.{ .name = "resize", .signature = "i",.types = &.{null,},},},.event_count = 0,.events = null,};comptime {
    @export(interface, .{
        .name = "wl_shm_pool_interface",
        .visibility = .hidden,
    });
}};pub const data_device_manager = struct {pub const interface: common.Interface = .{
    .name = "wl_data_device_manager",
    .version = 3,
    .method_count = 2,.methods = &.{.{ .name = "create_data_source", .signature = "n",.types = &.{blk: {
    _ = common.wl.data_source;
    break :blk @extern(*const common.Interface, .{ .name = "wl_data_source_interface" });
},},},.{ .name = "get_data_device", .signature = "no",.types = &.{blk: {
    _ = common.wl.data_device;
    break :blk @extern(*const common.Interface, .{ .name = "wl_data_device_interface" });
},blk: {
    _ = common.wl.seat;
    break :blk @extern(*const common.Interface, .{ .name = "wl_seat_interface" });
},},},},.event_count = 0,.events = null,};comptime {
    @export(interface, .{
        .name = "wl_data_device_manager_interface",
        .visibility = .hidden,
    });
}pub const DndAction = packed struct(u32) {copy: bool = false,move: bool = false,ask: bool = false,_padding: u29 = 0,
pub const Enum  = enum(c_int) {none= 0,copy= 1,move= 2,ask= 4,_,};
};
};pub const data_source = struct {pub const interface: common.Interface = .{
    .name = "wl_data_source",
    .version = 3,
    .method_count = 3,.methods = &.{.{ .name = "offer", .signature = "s",.types = &.{null,},},.{ .name = "destroy", .signature = "",.types = null,},.{ .name = "set_actions", .signature = "3u",.types = &.{null,},},},.event_count = 6,.events = &.{.{ .name = "target", .signature = "?s",.types = &.{null,},},.{ .name = "send", .signature = "sh",.types = &.{null,null,},},.{ .name = "cancelled", .signature = "",.types = null,},.{ .name = "dnd_drop_performed", .signature = "3",.types = null,},.{ .name = "dnd_finished", .signature = "3",.types = null,},.{ .name = "action", .signature = "3u",.types = &.{null,},},},};comptime {
    @export(interface, .{
        .name = "wl_data_source_interface",
        .visibility = .hidden,
    });
}pub const Error = enum(c_int) {invalid_action_mask= 0,invalid_source= 1,_,};
};pub const data_device = struct {pub const interface: common.Interface = .{
    .name = "wl_data_device",
    .version = 3,
    .method_count = 3,.methods = &.{.{ .name = "start_drag", .signature = "?oo?ou",.types = &.{blk: {
    _ = common.wl.data_source;
    break :blk @extern(*const common.Interface, .{ .name = "wl_data_source_interface" });
},blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},null,},},.{ .name = "set_selection", .signature = "?ou",.types = &.{blk: {
    _ = common.wl.data_source;
    break :blk @extern(*const common.Interface, .{ .name = "wl_data_source_interface" });
},null,},},.{ .name = "release", .signature = "2",.types = null,},},.event_count = 6,.events = &.{.{ .name = "data_offer", .signature = "n",.types = &.{blk: {
    _ = common.wl.data_offer;
    break :blk @extern(*const common.Interface, .{ .name = "wl_data_offer_interface" });
},},},.{ .name = "enter", .signature = "uoff?o",.types = &.{null,blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},null,null,blk: {
    _ = common.wl.data_offer;
    break :blk @extern(*const common.Interface, .{ .name = "wl_data_offer_interface" });
},},},.{ .name = "leave", .signature = "",.types = null,},.{ .name = "motion", .signature = "uff",.types = &.{null,null,null,},},.{ .name = "drop", .signature = "",.types = null,},.{ .name = "selection", .signature = "?o",.types = &.{blk: {
    _ = common.wl.data_offer;
    break :blk @extern(*const common.Interface, .{ .name = "wl_data_offer_interface" });
},},},},};comptime {
    @export(interface, .{
        .name = "wl_data_device_interface",
        .visibility = .hidden,
    });
}pub const Error = enum(c_int) {role= 0,used_source= 1,_,};
};pub const data_offer = struct {pub const interface: common.Interface = .{
    .name = "wl_data_offer",
    .version = 3,
    .method_count = 5,.methods = &.{.{ .name = "accept", .signature = "u?s",.types = &.{null,null,},},.{ .name = "receive", .signature = "sh",.types = &.{null,null,},},.{ .name = "destroy", .signature = "",.types = null,},.{ .name = "finish", .signature = "3",.types = null,},.{ .name = "set_actions", .signature = "3uu",.types = &.{null,null,},},},.event_count = 3,.events = &.{.{ .name = "offer", .signature = "s",.types = &.{null,},},.{ .name = "source_actions", .signature = "3u",.types = &.{null,},},.{ .name = "action", .signature = "3u",.types = &.{null,},},},};comptime {
    @export(interface, .{
        .name = "wl_data_offer_interface",
        .visibility = .hidden,
    });
}pub const Error = enum(c_int) {invalid_finish= 0,invalid_action_mask= 1,invalid_action= 2,invalid_offer= 3,_,};
};pub const shell = struct {pub const interface: common.Interface = .{
    .name = "wl_shell",
    .version = 1,
    .method_count = 1,.methods = &.{.{ .name = "get_shell_surface", .signature = "no",.types = &.{blk: {
    _ = common.wl.shell_surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_shell_surface_interface" });
},blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},},},},.event_count = 0,.events = null,};comptime {
    @export(interface, .{
        .name = "wl_shell_interface",
        .visibility = .hidden,
    });
}};pub const shell_surface = struct {pub const interface: common.Interface = .{
    .name = "wl_shell_surface",
    .version = 1,
    .method_count = 10,.methods = &.{.{ .name = "pong", .signature = "u",.types = &.{null,},},.{ .name = "move", .signature = "ou",.types = &.{blk: {
    _ = common.wl.seat;
    break :blk @extern(*const common.Interface, .{ .name = "wl_seat_interface" });
},null,},},.{ .name = "resize", .signature = "ouu",.types = &.{blk: {
    _ = common.wl.seat;
    break :blk @extern(*const common.Interface, .{ .name = "wl_seat_interface" });
},null,null,},},.{ .name = "set_toplevel", .signature = "",.types = null,},.{ .name = "set_transient", .signature = "oiiu",.types = &.{blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},null,null,null,},},.{ .name = "set_fullscreen", .signature = "uu?o",.types = &.{null,null,blk: {
    _ = common.wl.output;
    break :blk @extern(*const common.Interface, .{ .name = "wl_output_interface" });
},},},.{ .name = "set_popup", .signature = "ouoiiu",.types = &.{blk: {
    _ = common.wl.seat;
    break :blk @extern(*const common.Interface, .{ .name = "wl_seat_interface" });
},null,blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},null,null,null,},},.{ .name = "set_maximized", .signature = "?o",.types = &.{blk: {
    _ = common.wl.output;
    break :blk @extern(*const common.Interface, .{ .name = "wl_output_interface" });
},},},.{ .name = "set_title", .signature = "s",.types = &.{null,},},.{ .name = "set_class", .signature = "s",.types = &.{null,},},},.event_count = 3,.events = &.{.{ .name = "ping", .signature = "u",.types = &.{null,},},.{ .name = "configure", .signature = "uii",.types = &.{null,null,null,},},.{ .name = "popup_done", .signature = "",.types = null,},},};comptime {
    @export(interface, .{
        .name = "wl_shell_surface_interface",
        .visibility = .hidden,
    });
}};pub const seat = struct {pub const interface: common.Interface = .{
    .name = "wl_seat",
    .version = 9,
    .method_count = 4,.methods = &.{.{ .name = "get_pointer", .signature = "n",.types = &.{blk: {
    _ = common.wl.pointer;
    break :blk @extern(*const common.Interface, .{ .name = "wl_pointer_interface" });
},},},.{ .name = "get_keyboard", .signature = "n",.types = &.{blk: {
    _ = common.wl.keyboard;
    break :blk @extern(*const common.Interface, .{ .name = "wl_keyboard_interface" });
},},},.{ .name = "get_touch", .signature = "n",.types = &.{blk: {
    _ = common.wl.touch;
    break :blk @extern(*const common.Interface, .{ .name = "wl_touch_interface" });
},},},.{ .name = "release", .signature = "5",.types = null,},},.event_count = 2,.events = &.{.{ .name = "capabilities", .signature = "u",.types = &.{null,},},.{ .name = "name", .signature = "2s",.types = &.{null,},},},};comptime {
    @export(interface, .{
        .name = "wl_seat_interface",
        .visibility = .hidden,
    });
}pub const Capability = packed struct(u32) {pointer: bool = false,keyboard: bool = false,touch: bool = false,_padding: u29 = 0,
pub const Enum  = enum(c_int) {pointer= 1,keyboard= 2,touch= 4,_,};
};
pub const Error = enum(c_int) {missing_capability= 0,_,};
};pub const pointer = struct {pub const interface: common.Interface = .{
    .name = "wl_pointer",
    .version = 9,
    .method_count = 2,.methods = &.{.{ .name = "set_cursor", .signature = "u?oii",.types = &.{null,blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},null,null,},},.{ .name = "release", .signature = "3",.types = null,},},.event_count = 11,.events = &.{.{ .name = "enter", .signature = "uoff",.types = &.{null,blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},null,null,},},.{ .name = "leave", .signature = "uo",.types = &.{null,blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},},},.{ .name = "motion", .signature = "uff",.types = &.{null,null,null,},},.{ .name = "button", .signature = "uuuu",.types = &.{null,null,null,null,},},.{ .name = "axis", .signature = "uuf",.types = &.{null,null,null,},},.{ .name = "frame", .signature = "5",.types = null,},.{ .name = "axis_source", .signature = "5u",.types = &.{null,},},.{ .name = "axis_stop", .signature = "5uu",.types = &.{null,null,},},.{ .name = "axis_discrete", .signature = "5ui",.types = &.{null,null,},},.{ .name = "axis_value120", .signature = "8ui",.types = &.{null,null,},},.{ .name = "axis_relative_direction", .signature = "9uu",.types = &.{null,null,},},},};comptime {
    @export(interface, .{
        .name = "wl_pointer_interface",
        .visibility = .hidden,
    });
}pub const Error = enum(c_int) {role= 0,_,};
pub const ButtonState = enum(c_int) {released= 0,pressed= 1,_,};
pub const Axis = enum(c_int) {vertical_scroll= 0,horizontal_scroll= 1,_,};
pub const AxisSource = enum(c_int) {wheel= 0,finger= 1,continuous= 2,wheel_tilt= 3,_,};
pub const AxisRelativeDirection = enum(c_int) {identical= 0,inverted= 1,_,};
};pub const keyboard = struct {pub const interface: common.Interface = .{
    .name = "wl_keyboard",
    .version = 9,
    .method_count = 1,.methods = &.{.{ .name = "release", .signature = "3",.types = null,},},.event_count = 6,.events = &.{.{ .name = "keymap", .signature = "uhu",.types = &.{null,null,null,},},.{ .name = "enter", .signature = "uoa",.types = &.{null,blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},null,},},.{ .name = "leave", .signature = "uo",.types = &.{null,blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},},},.{ .name = "key", .signature = "uuuu",.types = &.{null,null,null,null,},},.{ .name = "modifiers", .signature = "uuuuu",.types = &.{null,null,null,null,null,},},.{ .name = "repeat_info", .signature = "4ii",.types = &.{null,null,},},},};comptime {
    @export(interface, .{
        .name = "wl_keyboard_interface",
        .visibility = .hidden,
    });
}pub const KeymapFormat = enum(c_int) {no_keymap= 0,xkb_v1= 1,_,};
pub const KeyState = enum(c_int) {released= 0,pressed= 1,_,};
};pub const touch = struct {pub const interface: common.Interface = .{
    .name = "wl_touch",
    .version = 9,
    .method_count = 1,.methods = &.{.{ .name = "release", .signature = "3",.types = null,},},.event_count = 7,.events = &.{.{ .name = "down", .signature = "uuoiff",.types = &.{null,null,blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},null,null,null,},},.{ .name = "up", .signature = "uui",.types = &.{null,null,null,},},.{ .name = "motion", .signature = "uiff",.types = &.{null,null,null,null,},},.{ .name = "frame", .signature = "",.types = null,},.{ .name = "cancel", .signature = "",.types = null,},.{ .name = "shape", .signature = "6iff",.types = &.{null,null,null,},},.{ .name = "orientation", .signature = "6if",.types = &.{null,null,},},},};comptime {
    @export(interface, .{
        .name = "wl_touch_interface",
        .visibility = .hidden,
    });
}};pub const output = struct {pub const interface: common.Interface = .{
    .name = "wl_output",
    .version = 4,
    .method_count = 1,.methods = &.{.{ .name = "release", .signature = "3",.types = null,},},.event_count = 6,.events = &.{.{ .name = "geometry", .signature = "iiiiissi",.types = &.{null,null,null,null,null,null,null,null,},},.{ .name = "mode", .signature = "uiii",.types = &.{null,null,null,null,},},.{ .name = "done", .signature = "2",.types = null,},.{ .name = "scale", .signature = "2i",.types = &.{null,},},.{ .name = "name", .signature = "4s",.types = &.{null,},},.{ .name = "description", .signature = "4s",.types = &.{null,},},},};comptime {
    @export(interface, .{
        .name = "wl_output_interface",
        .visibility = .hidden,
    });
}pub const Subpixel = enum(c_int) {unknown= 0,none= 1,horizontal_rgb= 2,horizontal_bgr= 3,vertical_rgb= 4,vertical_bgr= 5,_,};
pub const Transform = enum(c_int) {normal= 0,@"90"= 1,@"180"= 2,@"270"= 3,flipped= 4,flipped_90= 5,flipped_180= 6,flipped_270= 7,_,};
pub const Mode = packed struct(u32) {current: bool = false,preferred: bool = false,_padding: u30 = 0,
pub const Enum  = enum(c_int) {current= 0x1,preferred= 0x2,_,};
};
};pub const subcompositor = struct {pub const interface: common.Interface = .{
    .name = "wl_subcompositor",
    .version = 1,
    .method_count = 2,.methods = &.{.{ .name = "destroy", .signature = "",.types = null,},.{ .name = "get_subsurface", .signature = "noo",.types = &.{blk: {
    _ = common.wl.subsurface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_subsurface_interface" });
},blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},},},},.event_count = 0,.events = null,};comptime {
    @export(interface, .{
        .name = "wl_subcompositor_interface",
        .visibility = .hidden,
    });
}pub const Error = enum(c_int) {bad_surface= 0,bad_parent= 1,_,};
};pub const subsurface = struct {pub const interface: common.Interface = .{
    .name = "wl_subsurface",
    .version = 1,
    .method_count = 6,.methods = &.{.{ .name = "destroy", .signature = "",.types = null,},.{ .name = "set_position", .signature = "ii",.types = &.{null,null,},},.{ .name = "place_above", .signature = "o",.types = &.{blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},},},.{ .name = "place_below", .signature = "o",.types = &.{blk: {
    _ = common.wl.surface;
    break :blk @extern(*const common.Interface, .{ .name = "wl_surface_interface" });
},},},.{ .name = "set_sync", .signature = "",.types = null,},.{ .name = "set_desync", .signature = "",.types = null,},},.event_count = 0,.events = null,};comptime {
    @export(interface, .{
        .name = "wl_subsurface_interface",
        .visibility = .hidden,
    });
}pub const Error = enum(c_int) {bad_surface= 0,_,};
};